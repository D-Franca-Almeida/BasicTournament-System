// <auto-generated />
using System;
using BasicTournament_System.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BasicTournament_System.Migrations
{
    [DbContext(typeof(BasicTournament_SystemContext))]
    [Migration("20231105212741_NewUpdatesClass")]
    partial class NewUpdatesClass
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AtletaCampeonato", b =>
                {
                    b.Property<int>("AtletasId")
                        .HasColumnType("int");

                    b.Property<int>("CampeonatoId")
                        .HasColumnType("int");

                    b.HasKey("AtletasId", "CampeonatoId");

                    b.HasIndex("CampeonatoId");

                    b.ToTable("AtletaCampeonato");
                });

            modelBuilder.Entity("AtletaResultados", b =>
                {
                    b.Property<int>("AtletaId")
                        .HasColumnType("int");

                    b.Property<int>("ResultadosId")
                        .HasColumnType("int");

                    b.HasKey("AtletaId", "ResultadosId");

                    b.HasIndex("ResultadosId");

                    b.ToTable("AtletaResultados");
                });

            modelBuilder.Entity("BasicTournament_System.Models.Atleta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("ChaveLutaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInscricao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Equipe")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Faixa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Peso")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ChaveLutaId");

                    b.ToTable("Atleta");
                });

            modelBuilder.Entity("BasicTournament_System.Models.Campeonato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<int?>("ChaveLutaId")
                        .HasColumnType("int");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataRealizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Dia")
                        .HasColumnType("int");

                    b.Property<string>("EntradaPublico")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Fase")
                        .HasColumnType("int");

                    b.Property<string>("Ginasio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("InformacoesGerais")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<string>("SobreEvento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ChaveLutaId");

                    b.ToTable("Campeonato");
                });

            modelBuilder.Entity("BasicTournament_System.Models.ChaveLuta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AtletaId")
                        .HasColumnType("int");

                    b.Property<int>("CampeonatoId")
                        .HasColumnType("int");

                    b.Property<string>("Faixa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NumberFight")
                        .HasColumnType("int");

                    b.Property<string>("Peso")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Posicao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ChaveLuta");
                });

            modelBuilder.Entity("BasicTournament_System.Models.Resultados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CampeonatoNumber")
                        .HasColumnType("int");

                    b.Property<string>("Faixa")
                        .HasColumnType("longtext");

                    b.Property<string>("Peso")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Resultados");
                });

            modelBuilder.Entity("CampeonatoResultados", b =>
                {
                    b.Property<int>("CampeonatosId")
                        .HasColumnType("int");

                    b.Property<int>("ResultadosId")
                        .HasColumnType("int");

                    b.HasKey("CampeonatosId", "ResultadosId");

                    b.HasIndex("ResultadosId");

                    b.ToTable("CampeonatoResultados");
                });

            modelBuilder.Entity("ChaveLutaResultados", b =>
                {
                    b.Property<int>("ChaveLutasId")
                        .HasColumnType("int");

                    b.Property<int>("ResultadosId")
                        .HasColumnType("int");

                    b.HasKey("ChaveLutasId", "ResultadosId");

                    b.HasIndex("ResultadosId");

                    b.ToTable("ChaveLutaResultados");
                });

            modelBuilder.Entity("AtletaCampeonato", b =>
                {
                    b.HasOne("BasicTournament_System.Models.Atleta", null)
                        .WithMany()
                        .HasForeignKey("AtletasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BasicTournament_System.Models.Campeonato", null)
                        .WithMany()
                        .HasForeignKey("CampeonatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AtletaResultados", b =>
                {
                    b.HasOne("BasicTournament_System.Models.Atleta", null)
                        .WithMany()
                        .HasForeignKey("AtletaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BasicTournament_System.Models.Resultados", null)
                        .WithMany()
                        .HasForeignKey("ResultadosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BasicTournament_System.Models.Atleta", b =>
                {
                    b.HasOne("BasicTournament_System.Models.ChaveLuta", null)
                        .WithMany("Atleta")
                        .HasForeignKey("ChaveLutaId");
                });

            modelBuilder.Entity("BasicTournament_System.Models.Campeonato", b =>
                {
                    b.HasOne("BasicTournament_System.Models.ChaveLuta", null)
                        .WithMany("Campeonato")
                        .HasForeignKey("ChaveLutaId");
                });

            modelBuilder.Entity("CampeonatoResultados", b =>
                {
                    b.HasOne("BasicTournament_System.Models.Campeonato", null)
                        .WithMany()
                        .HasForeignKey("CampeonatosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BasicTournament_System.Models.Resultados", null)
                        .WithMany()
                        .HasForeignKey("ResultadosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ChaveLutaResultados", b =>
                {
                    b.HasOne("BasicTournament_System.Models.ChaveLuta", null)
                        .WithMany()
                        .HasForeignKey("ChaveLutasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BasicTournament_System.Models.Resultados", null)
                        .WithMany()
                        .HasForeignKey("ResultadosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BasicTournament_System.Models.ChaveLuta", b =>
                {
                    b.Navigation("Atleta");

                    b.Navigation("Campeonato");
                });
#pragma warning restore 612, 618
        }
    }
}
